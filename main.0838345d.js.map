{"version":3,"sources":["scripts/main.js"],"names":["tableHeaders","document","querySelectorAll","tableBody","querySelector","tableRows","forEach","header","addEventListener","e","index","indexOf","sortedRows","sort","a","b","aValue","innerText","bValue","normaliseNumber","localeCompare","innerHTML","row","append","num","parseFloat","replace"],"mappings":";AAAA,aA6BA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA3BA,IAAMA,EAAeC,SAASC,iBAAiB,MACzCC,EAAYF,SAASG,cAAc,SACnCC,EAAgBF,EAAAA,EAAUD,iBAAiB,OAEjDF,EAAaM,QAAQ,SAAAC,GACnBA,EAAOC,iBAAiB,QAAS,SAACC,GAC1BC,IAAAA,EAAQ,EAAIV,GAAcW,QAAQJ,GAElCK,EAAaP,EAAUQ,KAAK,SAACC,EAAGC,GAC9BC,IAAAA,EAASF,EAAEZ,iBAAiB,MAAMQ,GAAOO,UACzCC,EAASH,EAAEb,iBAAiB,MAAMQ,GAAOO,UAE3CP,OAAU,IAAVA,GAAyB,IAAVA,EACVS,EAAgBH,GAAUG,EAAgBD,GAG5CF,EAAOI,cAAcF,KAG9Bf,EAAUkB,UAAY,GAEtBT,EAAWN,QAAQ,SAAAgB,GACjBnB,EAAUoB,OAAOD,SAKvB,IAAMH,EAAkB,SAASK,GACxBC,OAAAA,WAAWD,EAAIE,QAAQ,IAAK,IAAIA,QAAQ,IAAK","file":"main.0838345d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHeaders = document.querySelectorAll('th');\nconst tableBody = document.querySelector('tbody');\nconst tableRows = [...tableBody.querySelectorAll('tr')];\n\ntableHeaders.forEach(header => {\n  header.addEventListener('click', (e) => {\n    const index = [...tableHeaders].indexOf(header);\n\n    const sortedRows = tableRows.sort((a, b) => {\n      const aValue = a.querySelectorAll('td')[index].innerText;\n      const bValue = b.querySelectorAll('td')[index].innerText;\n\n      if (index === 3 || index === 2) {\n        return normaliseNumber(aValue) - normaliseNumber(bValue);\n      }\n\n      return aValue.localeCompare(bValue);\n    });\n\n    tableBody.innerHTML = '';\n\n    sortedRows.forEach(row => {\n      tableBody.append(row);\n    });\n  });\n});\n\nconst normaliseNumber = function(num) {\n  return parseFloat(num.replace('$', '').replace(',', ''));\n};\n"]}